extends layout


block headerAdditions
  //link(rel="stylesheet", type="text/css", href="configstyle.css", media="screen")
  script
    var currentName = "#{oldName}";
    var profile;

    var inheritanceChanged = function() {};
    var uptimeTypeChanged = function() {};
    require(["dojo/domReady!", "dojo/ready", "dijit/form/FilteringSelect"], function() {

    uptimeTypeChanged = function() {
        if (dojo.byId("uptimeType").selectedIndex == 0) {
            dojo.byId("uptimeMax").style.display = "none";
        } else {
            dojo.byId("uptimeMax").style.display = "block"; 
        }
    }
    
    inheritanceChanged = function() {
        if (dojo.byId("personality").disabled = dojo.byId("inheritPersonality").checked) {
            dojo.byId("personality").value = profile.personality;
            dijit.byId("personality").setDisabled(true);
        } else {
            dijit.byId("personality").setDisabled(false);
        }

        if (dojo.byId("ethernet").disabled = dojo.byId("inheritEthernet").checked) {
            dojo.byId("ethernet").value = profile.ethernet;
            dijit.byId("ethernet").setDisabled(true);
        } else {
            dijit.byId("ethernet").setDisabled(false);
        }

        if (dojo.byId("dropRate").disabled = dojo.byId("inheritDropRate").checked) {
            dojo.byId("dropRate").value = profile.dropRate;
        }
        
        if (dojo.byId("uptimeMin").disabled = dojo.byId("inheritUptime").checked) {
            dojo.byId("uptimeMin").value = profile.uptimeMin;
        }

        if (dojo.byId("uptimeMax").disabled = dojo.byId("inheritUptime").checked) {
            dojo.byId("uptimeMax").value = profile.uptimeMax;
        }

        if (dojo.byId("uptimeType").disabled = dojo.byId("inheritUptime").checked) {
            if (profile.uptimeMin == profile.uptimeMax) {
               dojo.byId("uptimeType").selectedIndex = 0;
            } else {
               dojo.byId("uptimeType").selectedIndex = 1; 
            }
        }
        
        if (dojo.byId("tcpAction").disabled = dojo.byId("inheritTcpAction").checked) {
            if (profile.tcpAction == "reset") {
                dojo.byId("tcpAction").selectedIndex = 0;
            } else if (profile.tcpAction == "block") {
                dojo.byId("tcpAction").selectedIndex = 1;
            } else if (profile.tcpAction == "open") {
                dojo.byId("tcpAction").selectedIndex = 2;
            }
        }
        
        if (dojo.byId("udpAction").disabled = dojo.byId("inheritUdpAction").checked) {
            if (profile.udpAction == "reset") {
                dojo.byId("udpAction").selectedIndex = 0;
            } else if (profile.udpAction == "block") {
                dojo.byId("udpAction").selectedIndex = 1;
            } else if (profile.udpAction == "open") {
                dojo.byId("udpAction").selectedIndex = 2;
            }
        }
        
        if (dojo.byId("icmpAction").disabled = dojo.byId("inheritIcmpAction").checked) {
            if (profile.icmpAction == "reset") {
                dojo.byId("icmpAction").selectedIndex = 0;
            } else if (profile.icmpAction == "block") {
                dojo.byId("icmpAction").selectedIndex = 1;
            } else if (profile.icmpAction == "open") {
                dojo.byId("icmpAction").selectedIndex = 2;
            }
        }
        
        
        uptimeTypeChanged();
    }

    now.ready(function() {
        now.GetProfile(currentName, function(pfile){
        profile = pfile;

        dojo.byId("name").value = profile.name;
        
        if (profile.tcpAction == "reset") {
          dojo.byId("tcpAction").selectedIndex = 0;
        } else if (profile.tcpAction == "block") {
          dojo.byId("tcpAction").selectedIndex = 1;
        } else if (profile.tcpAction == "open") {
          dojo.byId("tcpAction").selectedIndex = 2;
        }

        if (profile.udpAction == "reset") {
          dojo.byId("udpAction").selectedIndex = 0;
        } else if (profile.udpAction == "block") {
          dojo.byId("udpAction").selectedIndex = 1;
        } else if (profile.udpAction == "open") {
          dojo.byId("udpAction").selectedIndex = 2;
        }
       
        if (profile.icmpAction == "reset") {
          dojo.byId("icmpAction").selectedIndex = 0;
        } else if (profile.icmpAction == "block") {
          dojo.byId("icmpAction").selectedIndex = 1;
        } else if (profile.icmpAction == "open") {
          dojo.byId("icmpAction").selectedIndex = 2;
        }

        dojo.byId("personality").value = profile.personality;
        dojo.byId("ethernet").value = profile.ethernet;
        dojo.byId("uptimeMin").value = profile.uptimeMin;
        dojo.byId("uptimeMax").value = profile.uptimeMax;
        dojo.byId("dropRate").value = profile.dropRate;

        dojo.byId("inheritPersonality").checked = profile.isPersonalityInherited;
        dojo.byId("inheritEthernet").checked = profile.isEthernetInherited;
        dojo.byId("inheritDropRate").checked = profile.isDropRateInherited;
        dojo.byId("inheritUptime").checked = profile.isUptimeInherited;
        dojo.byId("inheritTcpAction").checked = profile.isTcpActionInherited;
        dojo.byId("inheritUdpAction").checked = profile.isUdpActionInherited;
        dojo.byId("inheritIcmpAction").checked = profile.isIcmpActionInherited;

        inheritanceChanged();
      });
    });
    });


block content
  mixin defaultActionBox(i)
    select(id=i)
      option reset
      option block
      option open

  h2 Editing Profile

  form(method="post", action="/editHoneydProfileSave")

    table()
      col
      col
      col(style="width:200px")
      col(style="width:300px")
      
      tr
        td
        td
        td(style="text-align:right")
          label Profile Name
        td
          input#name(type="text", name="name")
      
 
      tr
        td
          input#inheritPersonality(type="checkbox", name="inheritPersonality", onclick="inheritanceChanged()") 
        td
          label Inherit?
        td(style="text-align:right")
          label Operating System Personality
        td
          select#personality(data-dojo-type="dijit.form.FilteringSelect", name="personality", autocomplete="true", pageSize=10)
            each os in personalities
              option(value="#{os}") #{os}
      
      tr
        td
          input#inheritEthernet(type="checkbox", name="inheritEthernet", onclick="inheritanceChanged()") 
        td
          label Inherit?
        td(style="text-align:right")
          label Ethernet Vendor
        td
          select#ethernet(data-dojo-type="dijit.form.FilteringSelect", name="ethernet", autocomplete="true", pageSize=10)
            each vendor in vendors
              option(value="#{vendor}") #{vendor}
      
      tr
        td
          input#inheritDropRate(type="checkbox", name="inheritDropRate", onclick="inheritanceChanged()") 
        td
          label Inherit?
        td(style="text-align:right")
          label Packet Drop Percentage
        td
          input#dropRate(type="number", name="dropRate", min=0, max=100)


      tr
        td
          input#inheritUptime(type="checkbox", name="inheritUptime", onclick="inheritanceChanged()") 
        td
          label Inherit?
        td(style="text-align:right")
          label Fixed uptime or uptime range?
        td
          select#uptimeType(name="uptimeType", onchange="uptimeTypeChanged()")
            option Fixed
            option Range
        
      tr
        td
        td
        td(style="text-align:right")
          label Uptime Range
        td
          input#uptimeMin(type="number", name="uptimeMin", min=0)
          input#uptimeMax(type="number", name="uptimeMax", min=0)

      tr
        td
          input#inheritTcpAction(type="checkbox", name="inheritTcpAction", onclick="inheritanceChanged()") 
        td
          label Inherit?
        td(style="text-align:right")
          label Default TCP Action
        td
          mixin defaultActionBox('tcpAction')
  
      tr
        td
          input#inheritUdpAction(type="checkbox", name="inheritUdpAction", onclick="inheritanceChanged()") 
        td
          label Inherit?
        td(style="text-align:right")
          label Default UDP Action
        td
          mixin defaultActionBox('udpAction')
      tr
        td
          input#inheritIcmpAction(type="checkbox", name="inheritIcmpAction", onclick="inheritanceChanged()") 
        td
          label Inherit?
        td(style="text-align:right")
          label Default ICMP Action
        td
          mixin defaultActionBox('icmpAction')


