script
  function updateEnabledFeaturesString(whichFeature)
  {
    var enabledMask = document.getElementById("ENABLED_FEATURES").getAttribute("value");
    
    var changeTo = "";
    
    if(document.getElementById("feature" + whichFeature).checked)
    {
      for(var i in enabledMask)
      {
        if(i == whichFeature)
        {
          changeTo += "1";
        }
        else
        {
          changeTo += enabledMask[i];
        }
      }
    }
    else
    {
      for(var i in enabledMask)
      {
        if(i == whichFeature)
        {
          changeTo += "0";
        }
        else
        {
          changeTo += enabledMask[i];
        }
      }
    }
    
    document.getElementById("ENABLED_FEATURES").setAttribute("value", changeTo);
    document.getElementById("enabledFeaturesLabel").innerHTML = "Features Mask: " + changeTo;
  }
  
form(method="post", action="/configureNovaSave")
  h2 General Configuration

  h2 Silent Alarm
  label Port
  input(type="number", step="1", min="1025", max="65535", name="SILENT_ALARM_PORT",  value=SILENT_ALARM_PORT)
  br
  
  label Max Connection Attempts
  input(type="number", step="1", min="0", name="SA_MAX_ATTEMPTS", value=SA_MAX_ATTEMPTS)
  br
  
  label Sleep Duration
  input(type="text", name="SA_SLEEP_DURATION",  value=SA_SLEEP_DURATION)
  br

  h2 File Paths
  label Path to state save file
  input(type="text", name="CE_SAVE_FILE",  value=CE_SAVE_FILE)
  br
  
  label Path to training file
  input(type="text", name="DATAFILE",  value=DATAFILE)
  br
   
  label Path to PCAP file
  input(type="text", name="PCAP_FILE",  value=PCAP_FILE)
  br

  label Path to User Honeyd Config
  input(type="text", name="USER_HONEYD_CONFIG",  value=USER_HONEYD_CONFIG)
  br
  
  
  label Path to Haystack Honeyd Config File
  input(type="text", name="HS_HONEYD_CONFIG",  value=HS_HONEYD_CONFIG)
  br

  h2 TCP Timeout
  label TCP Timeout
  input(type="number", step="1", min="0", name="TCP_TIMEOUT",  value=TCP_TIMEOUT)
  br

  label TCP Timeout Check Frequency
  input(type="number", step="1", min="0", name="TCP_CHECK_FREQ",  value=TCP_CHECK_FREQ)
  br

  h2 Special Run Settings
  label Read PCAP file?
  br
  if READ_PCAP != "0"
    |Yes
    input(type="radio", name="READ_PCAP", value="1", checked)
    br
    |No
    input(type="radio", name="READ_PCAP", value="0")
    br
  else
    |Yes
    input(type="radio", name="READ_PCAP", value="1")
    br
    |No
    input(type="radio", name="READ_PCAP", value="0", checked)
    br
  br

  label Go to live capture after PCAP?
  br
  if GO_TO_LIVE != "0"
    |Yes
    input(type="radio", name="GO_TO_LIVE", value="1", checked)
    br
    |No
    input(type="radio", name="GO_TO_LIVE", value="0")
    br
  else
    |Yes
    input(type="radio", name="GO_TO_LIVE", value="1")
    br
    |No
    input(type="radio", name="GO_TO_LIVE", value="0", checked)
    br
  br
  

  h2 Classification Settings
  label(style="text-align:center;vertical-align:middle", id="enabledFeaturesLabel", name="ENABLED_FEATURES") Features Mask: #{ENABLED_FEATURES}
  br
  br
  table
    thead
      tr 
        td
          label(style="text-align:center;vertical-align:middle;font:bold;") Feature Name
        td
          label(style="text-align:center;vertical-align:middle;font:bold;") Enabled? 
    tbody
      - for(var i = 0; i < FEATURE_NAMES.length; i++)
        - if(ENABLED_FEATURES[i] == 1)
          tr
            td(style="text-align:center;vertical-align:middle;") 
              #{FEATURE_NAMES[i]}
            td
              input(type="checkbox", value="#{i}", id="feature#{i}", checked, onclick="updateEnabledFeaturesString(#{i})")
        - else
          tr
            td(style="text-align:center;vertical-align:middle;")
              #{FEATURE_NAMES[i]}
            td
              input(type="checkbox", value="#{i}", id="feature#{i}", onclick="updateEnabledFeaturesString(#{i})")
  br
  
  input(type="hidden", id="ENABLED_FEATURES", name="ENABLED_FEATURES", value="#{ENABLED_FEATURES}")
  
  hidden(id="length", value=FEATURE_NAMES.length)
  
  label Neighbors
  input(type="number", step="1", min="1", name="K",  value=K)
  br
  
  label Classification Timeout
  input(type="number", step="1", min="0", name="CLASSIFICATION_TIMEOUT",  value=CLASSIFICATION_TIMEOUT)
  br

  label EPS
  input(name="EPS",  value=EPS)
  br

  label Classification Threshold
  input(name="CLASSIFICATION_THRESHOLD",  value=CLASSIFICATION_THRESHOLD)
  br

  h2 Training Mode Settings
  label Training mode?
  br

  if IS_TRAINING != "0"
    |Yes
    input(type="radio", name="IS_TRAINING", value="1", checked)
    br
    |No
    input(type="radio", name="IS_TRAINING", value="0")
    br
  else
    |Yes
    input(type="radio", name="IS_TRAINING", value="1")
    br
    |No
    input(type="radio", name="IS_TRAINING", value="0", checked)
    br
  br
  
  label Training Capture folder
  input(name="TRAINING_CAP_FOLDER",  value=TRAINING_CAP_FOLDER)
  br
  
  label Thinning Distance
  input(name="THINNING_DISTANCE",  value=THINNING_DISTANCE)
  br

  h2 Doppelganger
  label Doppelganger IP
  input(name="DOPPELGANGER_IP",  value=DOPPELGANGER_IP)
  br

  label State save frequency
  input(type="number", min="0", name="SAVE_FREQUENCY",  value=SAVE_FREQUENCY)
  br

  label Data TTL
  input(type="number", min="0", name="DATA_TTL",  value=DATA_TTL)
  br

  h2 Logger Settings
  label Service Preferences
  input(name="SERVICE_PREFERENCES", value=SERVICE_PREFERENCES)
  br

  label Haystack Storage
  input(name="HAYSTACK_STORAGE",  value=HAYSTACK_STORAGE)
  br


